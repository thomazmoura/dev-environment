set number
set relativenumber
set encoding=UTF-8
set linebreak

set tabstop=2
set shiftwidth=2
set expandtab

set ignorecase
set smartcase

set cursorline
set cursorcolumn

set foldmethod=syntax
set foldlevel=4

set noshowmode
set laststatus=2

set mouse=a

set hlsearch
filetype plugin indent on

" Set default directory for the swap files
set directory=$HOME/.local/share/nvim/site/swapfiles/

set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
  \,sm:block-blinkwait175-blinkoff150-blinkon175
set termguicolors

set wildignore+=*.png
set wildignore+=*.jpg
set wildignore+=*/node_modules/**
set wildignore+=*/bin/**
set wildignore+=*/obj/**

" Custom Registers
" Convert SQL Column to C# property
let @s = "^Wdi]^Pa wdi]hPlD:s/numeric/decimal/e:s/bit/bool/e:s/nvarchar/string/e:s/varchar/string/e:s/float/double/e:s/datetime2/datetime/e:s/bigint/float/e:s/text/string/e:s/datetime/DateTime/eA { get; set; }Ipublic j"
" Merge SQL mapping and C# properties
let @c = "^d2Wf{hDIbuilder.Property(peÂ€kbÂ€kbusuario => usuario.A)o.HasColumnName();hi\"\"mz}j^yi]dd`z^f\"\"0pj"
let @z = "\"zyiwb\"x y\"xyiwOprivate readonly \"xpa \"zpbi_A;/{%O\"zpI_A = \"zpA;=="

source $HOME/.modules/neovim-plug/plug.vimrc

" Custom Keymaps
"  Set space as the leader
let mapleader = " "

" COC.NVIM default settings - Currently being replaced by LSP
" source $HOME/.local/share/nvim/site/coc-config.vimrc
let g:coc_config_home = "$HOME/.config/nvim"

" NeoVim Custom keybindings
source $HOME/.local/share/nvim/site/nvim-keybindings.vimrc

"lua configuration
source $HOME/.local/share/nvim/site/setup.lua

" Yank highlight
autocmd TextYankPost * silent! lua vim.highlight.on_yank { higroup="TabLineSel", timeout=450 }

" copy to attached terminal using the yank(1) script:
" https://github.com/sunaku/home/blob/master/bin/yank
function! Yank(text) abort
  let escape = system('yank', a:text)
  if v:shell_error
    echoerr escape
  else
    call writefile([escape], '/dev/tty', 'b')
  endif
endfunction
vnoremap <silent> <Leader>Y y:<C-U>call Yank(@0)<CR>

" automatically run yank(1) whenever yanking in Vim with the + register
function! CopyYank() abort
  if(v:event.regname == '+')
    call Yank(join(v:event.regcontents, "\n"))
  endif
endfunction
autocmd TextYankPost * call CopyYank()

" Transparent floating windows
set winblend=15
set pumblend=15

let g:rainbow_conf = {
\	'separately': {
\		'*': {},
\		'html': 0
\	}
\}

" Rainbow brackets
let g:rainbow_active = 1

" vim-markdown Settings
let g:vim_markdown_folding_disabled = 1

" Write all buffers before navigating from Vim to tmux pane
let g:tmux_navigator_save_on_switch = 2

" " FZF configuration
" let g:fzf_layout = { 'window': { 'width': 0.85, 'height': 0.85 } }

" Colorscheme
syntax enable
set background=dark
let g:one_allow_italics = 1 " One colorscheme configuration
let g:tokyonight_style = "storm" " Tokyo Night colorscheme configuration

colorscheme tokyonight
highlight Normal guibg=none
highlight Inactive guibg=none
highlight MsgArea guibg=#1a1b26
highlight LineNr guibg=#1a1b26
highlight CursorLineNr guibg=#1a1b26
set fillchars+=vert:â”‚
highlight VertSplit guibg=none guifg=#414868

" Using underline until Windows Terminal supports undercul
highlight DiagnosticUnderlineHint cterm=underline gui=underline guisp=#1abc9c guifg=#1abc9c
highlight DiagnosticUnderlineInfo cterm=underline gui=underline guisp=#0db9d7 guifg=#0db9d7
highlight DiagnosticUnderlineWarn cterm=underline gui=underline guisp=#e0af68 guifg=#e0af68
highlight DiagnosticUnderlineError cterm=underline gui=underline guisp=#db4b4b guifg=#db4b4b

" Filetype detections
autocmd BufNewFile,BufRead *.code-snippets set filetype=json
autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescript
autocmd BufNewFile,BufRead *.config,*.csproj set filetype=xml

" Disable modelines for security reasons
set nomodeline
